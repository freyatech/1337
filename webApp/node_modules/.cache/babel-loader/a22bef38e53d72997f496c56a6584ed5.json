{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/tretton37/tretton37assignment/src/components/layout.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"90%\",\n      bacgroudn\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 47\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Layout;\n\nconst Row = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ShowWindowDimensions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Row;\n\nconst useWindowSize = () => {\n  _s();\n\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\n_s(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\nconst ShowWindowDimensions = props => {\n  _s2();\n\n  const [width, height] = useWindowSize();\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Window size: \", width, \" x \", height]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(ShowWindowDimensions, \"JSkVnn8OB/Vg/xXlIdwYFeoMO8c=\", false, function () {\n  return [useWindowSize];\n});\n\n_c3 = ShowWindowDimensions;\nexport default Layout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"ShowWindowDimensions\");","map":{"version":3,"sources":["/Users/lucas/tretton37/tretton37assignment/src/components/layout.js"],"names":["React","useLayoutEffect","useState","Layout","width","bacgroudn","Row","useWindowSize","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ShowWindowDimensions","props","height"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA;AAAd,KAAZ;AAAA,2BAAsC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;KAAMF,M;;AAMN,MAAMG,GAAG,GAAG,MAAM;AACd,sBACI;AAAA,2BAAK,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD;;MAAMA,G;;AAMN,MAAMC,aAAa,GAAC,MAAK;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAAhC;AACAD,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMS,UAAU,GAAC,MAAK;AACpBD,MAAAA,OAAO,CAAC,CAACE,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAP;AACD,KAFD;;AAGAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,UAAlC;AACAA,IAAAA,UAAU;AACV,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,UAArC,CAAb;AACD,GAPc,EAOZ,EAPY,CAAf;AAQA,SAAOF,IAAP;AACD,CAXD;;GAAMD,a;;AAaN,MAAMS,oBAAoB,GAAEC,KAAD,IAAU;AAAA;;AACnC,QAAM,CAACb,KAAD,EAAQc,MAAR,IAAkBX,aAAa,EAArC;AACA,sBAAO;AAAA,gCAAoBH,KAApB,SAA8Bc,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;IAAMF,oB;UACoBT,a;;;MADpBS,oB;AAKN,eAAeb,MAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\n\nconst Layout = () => {\n    return (\n        <div style={{width:\"90%\", bacgroudn}}><Row></Row></div>\n    )\n}\n\nconst Row = () => {\n    return (\n        <div><ShowWindowDimensions></ShowWindowDimensions></div>\n    )\n}\n\nconst useWindowSize=()=> {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    const updateSize=()=> {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nconst ShowWindowDimensions=(props)=> {\n  const [width, height] = useWindowSize();\n  return <span>Window size: {width} x {height}</span>;\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}