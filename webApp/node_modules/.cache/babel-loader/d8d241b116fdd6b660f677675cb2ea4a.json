{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/1337/webApp/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Header from './components/header';\nimport Layout from './components/layout';\nimport { render } from '@testing-library/react';\nimport { getEmployees, getInitialData, checkProgres } from './utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getEmp = async () => {\n      let data = await getEmployees();\n      console.log(data);\n      this.setState({\n        profiles2: data\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        apiKey: e.target.value\n      });\n    };\n\n    this.handleSubmit = async () => {\n      console.log(this.state.apiKey);\n      let response = await getInitialData(this.state.apiKey);\n      response == 1 ? this.getEmp() : console.log(response);\n      this.setState({\n        interval: setInterval(() => {\n          this.checkProgress();\n        }, 1000)\n      });\n    };\n\n    this.checkProgress = async () => {\n      let response = await checkProgres();\n      console.log(response);\n      console.log(response.done);\n      this.setState({\n        total: response.total,\n        done: response.done\n      });\n\n      if (response.done >= response.total) {\n        console.log(response.done > response.total);\n        clearInterval(this.state.interval);\n      }\n    };\n\n    this.state = {\n      profiles: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n      profiles2: [],\n      apiKey: \"\",\n      interval: 0,\n      total: 0,\n      done: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getEmp();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Please provide API key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.apiKey,\n            onChange: e => {\n              this.handleChange(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleSubmit(),\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 134\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Downloaded \", {}]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 193\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        profiles: this.state.profiles2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lucas/1337/webApp/src/App.js"],"names":["React","Header","Layout","render","getEmployees","getInitialData","checkProgres","App","Component","constructor","props","getEmp","data","console","log","setState","profiles2","handleChange","e","apiKey","target","value","handleSubmit","state","response","interval","setInterval","checkProgress","done","total","clearInterval","profiles","componentDidMount"],"mappings":"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","sourcesContent":["import  React  from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/header';\nimport Layout from './components/layout';\nimport { render } from '@testing-library/react';\nimport { getEmployees, getInitialData, checkProgres } from './utils/api';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      profiles: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n      profiles2: [],\n      apiKey: \"\",\n      interval: 0,\n      total: 0,\n      done: 0,\n    }\n  }\n\n  componentDidMount() {\n    this.getEmp()\n  }\n  getEmp = async () => {\n    let data = await getEmployees();\n    console.log(data);\n    this.setState({ profiles2: data });\n  }\n  handleChange = (e) => {\n    this.setState({ apiKey: e.target.value });\n  }\n  handleSubmit = async () => {\n    console.log(this.state.apiKey)\n    let response = await getInitialData(this.state.apiKey)\n    response == 1 ? this.getEmp() : console.log(response)\n    this.setState({interval:setInterval(() => {\n      this.checkProgress()\n    }, 1000)})\n  }\n  checkProgress = async () => {\n    let response = await checkProgres()\n    console.log(response)\n    console.log(response.done)\n    this.setState({total:response.total,done:response.done})\n    if (response.done >= response.total) {\n      console.log(response.done > response.total)\n      clearInterval(this.state.interval)\n    }\n  }\n\n\n  render() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div><label>Please provide API key:<input value={this.state.apiKey} onChange={(e) => { this.handleChange(e) }}></input></label><button onClick={() => this.handleSubmit()}>submit</button><label>Downloaded {{}}</label></div>\n      <Layout profiles={this.state.profiles2}></Layout>\n    </div>\n  );\n}\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}