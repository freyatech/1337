{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/tretton37/tretton37assignment/src/components/layout.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Layout = props => {\n  const {\n    profiles\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"90%\",\n      background: \"green\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      profiles: profiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 88\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Layout;\n\nconst getNumberOfProfilesInARow = () => {\n  _s();\n\n  let windowDimensions = useWindowSize();\n  let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / 290);\n};\n\n_s(getNumberOfProfilesInARow, \"hQuRyPvzXQ0WJJBn6DHrcsqBeYY=\", false, function () {\n  return [useWindowSize];\n});\n\nconst Row = props => {\n  _s2();\n\n  const {\n    profiles\n  } = props;\n  console.log(profiles);\n  let windowDimensions = useWindowSize();\n  let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / 290);\n  let rowProfiles = profiles.slice(0, numberOfContainers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: rowProfiles.map(value => {\n        return ProfileContainer(value);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}; // const RenderProfielContainers = (profiles) => {\n//     let windowDimensions = useWindowSize()\n//     let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / (220))\n//     return (\n//         {Array.from(profiles).map}\n//     )\n// }\n\n\n_s2(Row, \"hQuRyPvzXQ0WJJBn6DHrcsqBeYY=\", false, function () {\n  return [useWindowSize];\n});\n\n_c2 = Row;\n\nconst ProfileContainer = testValue => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"280px\",\n      height: \"150px\",\n      background: \"white\",\n      margin: \"10px\"\n    },\n    children: testValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ProfileContainer;\n\nconst useWindowSize = () => {\n  _s3();\n\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      setSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n};\n\n_s3(useWindowSize, \"13XWg4Ot0MOczACYcn76+JLjv8w=\");\n\nconst ShowWindowDimensions = props => {\n  _s4();\n\n  const [width, height] = useWindowSize(); //const numberOfContainers = RenderProfielContainers()\n  // return <span>Window size: {width} x {height}, number of containers in a row { numberOfContainers}</span>;\n};\n\n_s4(ShowWindowDimensions, \"JSkVnn8OB/Vg/xXlIdwYFeoMO8c=\", false, function () {\n  return [useWindowSize];\n});\n\n_c4 = ShowWindowDimensions;\nexport default Layout;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"ProfileContainer\");\n$RefreshReg$(_c4, \"ShowWindowDimensions\");","map":{"version":3,"sources":["/Users/lucas/tretton37/tretton37assignment/src/components/layout.js"],"names":["React","useLayoutEffect","useState","Layout","props","profiles","width","background","margin","padding","getNumberOfProfilesInARow","windowDimensions","useWindowSize","numberOfContainers","Math","floor","Row","console","log","rowProfiles","slice","display","flexDirection","justifyContent","alignItems","map","value","ProfileContainer","testValue","height","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ShowWindowDimensions"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react';\n\nconst Layout = props => {\n    const {profiles} = props\n    return (\n        <div style={{width:\"90%\", background:\"green\", margin: \"auto\", padding:\"20px\"}}><Row profiles={profiles}></Row></div>\n    )\n}\n\nconst getNumberOfProfilesInARow = () => {\n    let windowDimensions = useWindowSize()\n    let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / (290))\n}\n\nconst Row = props => {\n    const {profiles}=props\n    console.log(profiles)\n    let windowDimensions = useWindowSize()\n    let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / (290))\n    let rowProfiles = profiles.slice(0,numberOfContainers)\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", alignItems: \"center\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            {rowProfiles.map(value => {\n                return ProfileContainer(value)\n            })}\n                </div>\n            {/* <ShowWindowDimensions></ShowWindowDimensions>\n            <ShowWindowDimensions></ShowWindowDimensions>\n            <ShowWindowDimensions></ShowWindowDimensions> */}\n        </div>\n    )\n}\n\n// const RenderProfielContainers = (profiles) => {\n//     let windowDimensions = useWindowSize()\n//     let numberOfContainers = Math.floor(windowDimensions[0] * 0.9 / (220))\n//     return (\n//         {Array.from(profiles).map}\n//     )\n// }\n\nconst ProfileContainer = (testValue) => {\n    return (\n        <div style={{ width: \"280px\", height: \"150px\", background: \"white\", margin: \"10px\" }}>{testValue}</div>\n    )\n}\n\nconst useWindowSize=()=> {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    const updateSize=()=> {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n    \n  return size;\n}\n\nconst ShowWindowDimensions=(props)=> {\n    const [width, height] = useWindowSize();\n    //const numberOfContainers = RenderProfielContainers()\n    // return <span>Window size: {width} x {height}, number of containers in a row { numberOfContainers}</span>;\n}\n\nexport default Layout"]},"metadata":{},"sourceType":"module"}